Traceback (most recent call last):
  File "main.py", line 128, in <module>
    main(args)
  File "main.py", line 123, in main
    train(train_loader, model, optimizer, criterion, args.print_freq, logger)
  File "main.py", line 33, in train
    loss = criterion(logits, label)   #coss entropy 1인 부분만 확률이 올라가게 만들어 주는것
  File "C:\Users\hjjh2\anaconda3\envs\pytorch\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\hjjh2\anaconda3\envs\pytorch\lib\site-packages\torch\nn\modules\loss.py", line 1164, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "C:\Users\hjjh2\anaconda3\envs\pytorch\lib\site-packages\torch\nn\functional.py", line 3014, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
RuntimeError: Expected floating point type for target with class probabilities, got Byte